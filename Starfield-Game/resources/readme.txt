// Readme - Starfield Game

Projektauftrag Sternenhimmel-Puzzles

Der Spiele-Club "Games4Ever" ist dabei, bei Mitgliedern beliebte Spiele auch für den Rechner anzubieten. Sie erhalten den Auftrag so genannte Sternenhimmel-Puzzles für den Computer zu gestalten.
Die Puzzles bestehen aus einem zweidimensionalen Raster mit eingetragenen Lösungsbedingungen Pfeile im Spielfeld. Jeder Pfeil muss mindestens auf einen Stern zeigen. Auf jeden Stern muss mindestens ein Pfeil zeigen. Die Zahlen am Rand geben an wie viele Sterne in jeder Zeile bzw. Spalte sind. Genauere Erläuterungen zu den Puzzles entnehmen Sie den beigelegten Beispielen.
Die Club-Mitglieder haben schon Wünsche zur PC-gestützten Version angemeldet, die auf jeden Fall umgesetzt werden sollen.
Spielen von Puzzles:
	Möglichst einfache, intuitive Navigation – wenig Mausbewegungen, wenig Klicks um etwas zu erreichen.
	Unfertige Spielstände müssen gespeichert werden können.
	Der Spielstand soll beim ersten falschen Spielzug festgehalten werden. Ein Button "Zurück zum Fehler" soll dann bei Auftreten des Widerspruchs den Spielstand so weit zurücksetzen, dass kein Fehler mehr vorhanden ist.
	Der Spielverlauf soll aufgezeichnet werden, so dass am Schluss noch mal im Zeitraffer die Entstehung des Sternenhimmels nachvollzogen werden kann.
	Außerdem soll ein "Tracking" aktiviert werden können. Er soll Ähnliches leisten, wie der "Zurück zum Fehler"-Button. Um Spielzüge auszuprobieren, möchte man bei Bedarf schrittweise zu einem festgehaltenen Spielstand zurückkehren können. Dieser soll aber nicht durch Auftreten eines Fehlers, sondern durch Setzen eines Markers, ausgelöst werden.
	Der Spielstand soll festgehalten werden, wenn ein Marker gesetzt wird. 
	Wird das Tracking aktiviert, wird der Modus "Zurück zum Fehler deaktiviert".
	Es soll möglich sein mehrere Marker nacheinander zu setzen.
	Das Spiel soll dann bei Bedarf schrittweise (immer zum zuletzt gesetzten Marker) zurückgesetzt werden können. Nur die festgehaltenen Spielstände sollen angesteuert werden können.
	Deaktivierung des "Tracking" löscht die Marker und die Zwischenspielstände.
Erstellen von Puzzles:
	Eigene Puzzles sollen erstellt werden können, indem die Lösung abgebildet wird. 
	Für neu eingegebene Puzzles soll die Einhaltung der Regeln zu einem beliebigen Zeitpunkt überprüft werden können. Werden die Regeln nicht eingehalten, sollen die Fehler im Spielfeld aufgezeigt werden.
	Unfertige Spielentwürfe müssen gespeichert werden können, aber so dass sie noch nicht als Spiel geladen werden können. 
	Auch lösbare Spiele sollen zur weiteren Bearbeitung wieder geladen werden können.
	Die Größe des Spielfeldes soll nachträglich angepasst werden können. Leere Spalten und Zeilen sollen gelöscht werden können. Neue Spalten und Zeilen sollen am Rand hinzugefügt werden können.
	Für neu eingegebene Puzzles soll die eindeutige Lösbarkeit zu einem beliebigen Zeitpunkt überprüft werden können. 
	Die Kombination von verschiedenen Algorithmen soll den menschlichen Lösungsweg nachvollziehen, um einen Schwierigkeitsgrad für das Puzzle zu bestimmen, welcher sich nicht nur auf die Größe des Spielfeldes bezieht.
	Nur Spiele, welche die Regeln einhalten und eindeutig lösbar sind, sollen als spielbares Spiel gespeichert werden können.

Handlungsanweisungen:
1.	Erstellen Sie zuerst unter Rücksprache mit dem Spiele-Club "Games4ever" ein Pflichtenheft einschließlich der Testspezifikation (siehe beiliegende Gliederung). Abgabetermin ist 1 Woche nach Projektauftrag. 
2.	2 Wochen nach Projektauftrag muss ein Grob-Entwurf des Programms als Klassendiagramm (ohne Konstruktoren ohne set- und get-Methoden) abgegeben werden.
3.	Für Teams, die mit Test-Driven-Development entwickeln entfallen 1 +2. Das fertige Klassendiagramm ist in diesem Fall am Schluss abzuliefern.
4.	Die Software ist mit der Programmiersprache C++ oder Java zu erstellen. Es soll eine GUI erstellt werden. Das Programm muss auf dem Betriebssystem Windows XP und den Schulrechnern kompilierbar sein und laufen.
5.	Aktuelle Programmierstandards, wie gute Wartbarkeit und Erweiterbarkeit des Programms, sind einzuhalten.
6.	Die Abschluss-Dokumentation umfasst das endgültige Klassendiagramm, eine Struktogramm für die Lösungsalgorithmen, gute Kommentierung des Quellcodes und eine Übersicht, wer woran wie viele Stunden gearbeitet hat.
Abgabetermin für das Programm und die Abschluss-Dokumentation ist der 14.12.2012. 
